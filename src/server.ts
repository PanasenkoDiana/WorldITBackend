import express from "express";
import http from "http";
import cors from "cors";
import dotenv from "dotenv";
import path from "path";
import { Server } from "socket.io";
import { prismaClient } from "./prisma/client";

import userRouter from "./UserApp/user.router";
import userPostRouter from "./UserPostApp/userPost.router";
import tagRouter from "./TagApp/tag.router";
import albumRouter from "./AlbumApp/album.router";
import friendRouter from "./FriendApp/friend.router";
import chatRouter from "./ChatApp/src/routes/chat.routes";
import chatSocket from "./ChatApp/src/sockets/chat.socket";
import { createTunnel } from "./sshTunnel";

dotenv.config();

const HOST = "192.168.0.111";
const PORT = 8000;

const startServer = async () => {
  try {
    // –°–æ–∑–¥–∞—ë–º SSH-—Ç—É–Ω–Ω–µ–ª—å –∏ –∂–¥—ë–º, –ø–æ–∫–∞ –æ–Ω –æ—Ç–∫—Ä–æ–µ—Ç—Å—è
    const { conn, server } = await createTunnel();

    // –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö —á–µ—Ä–µ–∑ —Ç—É–Ω–Ω–µ–ª—å
    await prismaClient.$connect();
    console.log("‚úÖ –£—Å–ø–µ—à–Ω–æ–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö");

    // –°–æ–∑–¥–∞—ë–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ Express –∏ HTTP —Å–µ—Ä–≤–µ—Ä
    const app = express();
    const httpServer = http.createServer(app);

    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º socket.io
    const io = new Server(httpServer, {
      cors: {
        origin: "*",
        methods: ["GET", "POST"],
      },
    });

    // –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º socket.io —á–∞—Ç
    chatSocket(io);

    // –ú–∏–¥–ª–≤–∞—Ä—ã Express
    app.use(express.json({ limit: "10mb" }));
    app.use(cors());
    app.use("/media", express.static(path.join(__dirname, "../", "media")))

    // –†–æ—É—Ç—ã API
    app.use("/api/user", userRouter);
    app.use("/api/posts", userPostRouter);
    app.use("/api/tags", tagRouter);
    app.use("/api/friends", friendRouter);
    app.use("/api/albums", albumRouter);
    app.use("/api/chats", chatRouter);

    // –ó–∞–ø—É—Å–∫–∞–µ–º HTTP —Å–µ—Ä–≤–µ—Ä
    httpServer.listen(PORT, HOST, () => {
      console.log(`üöÄ Server running at http://${HOST}:${PORT}`);
    });

    // –ö–æ—Ä—Ä–µ–∫—Ç–Ω–æ –∑–∞–∫—Ä—ã–≤–∞–µ–º —Ç—É–Ω–Ω–µ–ª—å –∏ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ –ø—Ä–∏ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–∏ –ø—Ä–æ—Ü–µ—Å—Å–∞
    const closeTunnel = () => {
      console.log("üîå Closing SSH tunnel and DB connection");
      server.close();
      conn.end();
      prismaClient.$disconnect();
    };

    process.on("exit", closeTunnel);
    process.on("SIGINT", () => {
      closeTunnel();
      process.exit();
    });
    process.on("SIGTERM", () => {
      closeTunnel();
      process.exit();
    });
  } catch (error) {
    console.error("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ —Å–µ—Ä–≤–µ—Ä–∞:", error);
    process.exit(1);
  }
};

startServer().catch(console.error);
